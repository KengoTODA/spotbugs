language: java
# Actually what we need is not sudo but full VM environment to build,
# because eclipse needs much memory so container-based environment (4GiB) is not enough.
# https://docs.travis-ci.com/user/ci-environment/#Virtualization-environments
sudo: required
dist: trusty

matrix:
  include:
    - env:
        - JDK_VERSION=oraclejdk9
        - JVM_ARGS='--add-opens java.base/java.lang=ALL-UNNAMED --add-opens java.base/java.util=ALL-UNNAMED --add-opens java.base/java.io=ALL-UNNAMED -Dsun.reflect.debugModuleAccessChecks=true'
      addons:
        apt:
          packages:
            - oracle-java9-installer
            - oracle-java9-set-default
    - env:
        - JDK_VERSION=oraclejdk8
      addons:
        apt:
          packages:
            - oracle-java8-installer
            - oracle-java8-set-default

install:
  - mkdir -p deps
  - if [[ ! -e deps/eclipse.tar.gz ]]; then wget www.eclipse.org/downloads/download.php?file=/eclipse/downloads/drops/R-3.6.2-201102101200/eclipse-SDK-3.6.2-linux-gtk-x86_64.tar.gz -O deps/eclipse.tar.gz; fi
  - tar xzvf deps/eclipse.tar.gz eclipse
  - echo eclipsePlugin.dir=$(pwd)/eclipse/plugins > eclipsePlugin/local.properties

script:
  - ./gradlew build smoketest -S --no-daemon -Dorg.gradle.java.home=$(jdk_switcher home $JDK_VERSION) -Dorg.gradle.jvmargs="$JVM_ARGS"

before_cache:
  - rm -f $HOME/.gradle/caches/modules-2/modules-2.lock
  - rm -rf $HOME/.gradle/caches/*/plugin-resolution/

cache:
  directories:
    - $HOME/.gradle/caches/
    - $HOME/.gradle/wrapper/
    - deps/
