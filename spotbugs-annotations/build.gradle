apply from: "$rootDir/gradle/checkstyle.gradle"
apply from: "$rootDir/gradle/javadoc.gradle"
apply from: "$rootDir/gradle/maven.gradle"
apply plugin: 'osgi'

dependencies {
  compile 'com.google.code.findbugs:jsr305:3.0.1'
}

jar {
  manifest {
    name 'spotbugs-annotations'
    symbolicName 'spotbugs-annotations'
    version project.version.replace('-', '.')
    instruction 'Bundle-RequiredExecutionEnvironment', 'JavaSE-1.8'
  }
}

javadoc {
  options.with {
    memberLevel = JavadocMemberLevel.PUBLIC
    docTitle = 'SpotBugs Annotation Documentation'
  }
}

task javadocJar(type: Jar) {
  classifier = 'javadoc'
  from javadoc
}

task sourcesJar(type: Jar) {
  classifier = 'sources'
  from sourceSets.main.allSource
}

artifacts {
  archives jar, javadocJar, sourcesJar
}

uploadArchives {
  repositories {
    mavenDeployer {
      pom.project {
        name 'SpotBugs Annotations'
        description 'Annotations the SpotBugs tool supports'
      }
    }
  }
}

def manifestForEclipsePrpject = file("META-INF/MANIFEST.MF")
task generateManifest {
  doLast {
    jar.manifest.writeTo(manifestForEclipsePrpject)
  }
}
tasks.eclipse.dependsOn generateManifest

task deleteManifest {
  doLast {
    project.delete manifestForEclipsePrpject
  }
}
tasks.cleanEclipse.dependsOn deleteManifest

eclipse {
  project {
    natures 'org.eclipse.jdt.core.javanature'
    natures 'org.eclipse.pde.PluginNature'

    buildCommand 'org.eclipse.jdt.core.javabuilder'
    buildCommand 'org.eclipse.pde.ManifestBuilder'
    buildCommand 'org.eclipse.pde.SchemaBuilder'
  }
}
